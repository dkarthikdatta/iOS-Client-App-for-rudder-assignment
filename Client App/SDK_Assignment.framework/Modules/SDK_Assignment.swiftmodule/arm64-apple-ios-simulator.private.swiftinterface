// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name SDK_Assignment
// swift-module-flags-ignorable: -enable-bare-slash-regex
import CryptoKit
import Foundation
@_exported import SDK_Assignment
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct Constants {
  public static let BASE_URL: Swift.String
  public static let EVENTS_END_POINT: Swift.String
  public static let API_KEY: Swift.String
  public static let USER_PROPERTIES: Swift.String
  public static let USER_IDENTITIES: Swift.String
  public static let EVENT_NAME: Swift.String
  public static let EVENT_PROPERTIES: Swift.String
  public static let TIME_STAMP: Swift.String
  public static let DEVICE_INFO: Swift.String
  public static let DEVICE_ID: Swift.String
  public static let DEVICE_MODEL: Swift.String
  public static let IOS_VERSION: Swift.String
}
public class ExampleSDKOptions {
  public init()
  @objc deinit
}
public enum ExampleSDKLogLevel : Swift.Int {
  case verbose
  case debug
  case info
  case warning
  case error
  case none
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public class ExampleSDKOptionsBuilder {
  public init()
  @discardableResult
  public func setHashUserIDs(_ value: Swift.Bool) -> SDK_Assignment.ExampleSDKOptionsBuilder
  @discardableResult
  public func setUseCustomEndPoint(_ value: Swift.Bool) -> SDK_Assignment.ExampleSDKOptionsBuilder
  @discardableResult
  public func setCustomEndPoint(_ endPoint: Swift.String?) -> SDK_Assignment.ExampleSDKOptionsBuilder
  public func build() -> SDK_Assignment.ExampleSDKOptions
  @objc deinit
}
@_hasMissingDesignatedInitializers public class ExampleSDK {
  public static func initialize(apiKey: Swift.String, options: SDK_Assignment.ExampleSDKOptions? = nil)
  public static var shared: SDK_Assignment.ExampleSDK? {
    get
  }
  public func sendEvent(name: Swift.String)
  public func sendEvent(name: Swift.String, properties: [Swift.String : Any]?)
  public func setUserProperties(properties: [Swift.String : Any]?)
  public func resetUserProperties()
  public func setUserIdentities(identities: [Swift.String : Any]?)
  public func resetUserIdentities()
  public func logOut()
  public func setLogLevel(level: SDK_Assignment.ExampleSDKLogLevel)
  @objc deinit
}
extension SDK_Assignment.ExampleSDKLogLevel : Swift.Equatable {}
extension SDK_Assignment.ExampleSDKLogLevel : Swift.Hashable {}
extension SDK_Assignment.ExampleSDKLogLevel : Swift.RawRepresentable {}
